import type { Metadata } from "next";
import { Geist, Geist_Mono, Inter } from "next/font/google";
import "./globals.css";

import { ThemeProvider } from "@/components/theme-provider";
import { cookies } from "next/headers";
import type { SupportedLanguage } from "@/contexts/LanguageContext";
import { LanguageProvider } from "@/contexts/LanguageContext";
import { AccentColorProvider } from "@/contexts/AccentColorContext";
import Header from "@/components/Header";
import Footer from "@/components/Footer";
import { Toaster } from "@/components/ui/sonner";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

// Self-host Inter to avoid render-blocking from Google Fonts CSS
const inter = Inter({
  variable: "--font-inter",
  subsets: ["latin"],
  weight: ["400", "700", "900"],
  display: "swap",
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default async function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  // Read language cookie on the server to align SSR and CSR
  const cookieStore = await cookies();
  const cookieLang = cookieStore.get("lang")?.value as SupportedLanguage | undefined;
  const initialLanguage: SupportedLanguage = cookieLang === "id" || cookieLang === "en" ? cookieLang : "en";
  return (
    <html lang="en" suppressHydrationWarning>
      <body className={`${inter.variable} ${geistSans.variable} ${geistMono.variable} antialiased`}>
        <ThemeProvider
          attribute="class"
          defaultTheme="dark"
          enableSystem
          disableTransitionOnChange
        >
          <AccentColorProvider>
            <LanguageProvider initialLanguage={initialLanguage}>
              <Header />
              {children}
              <Footer />
              <Toaster />
            </LanguageProvider>
          </AccentColorProvider>
        </ThemeProvider>
      </body>
    </html>
  );
}
